# Android
# Build your Android project with Gradle.
# Add steps that test, sign, and distribute the APK, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/android

pool:
  vmImage: 'macOS-latest'

steps:
- task: Gradle@2
  inputs:
    workingDirectory: ''
    gradleWrapperFile: 'gradlew'
    gradleOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/TEST-*.xml'
    tasks: 'assembleDebug test'
  displayName: gradlew assembleDebug test

- task: CopyFiles@2
  inputs:
    contents: '**/*.apk'
    targetFolder: '$(build.artifactStagingDirectory)'
  displayName: Copy .apk files to artifact staging directory

- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: '$(build.artifactStagingDirectory)'
    artifactName: 'drop'
    artifactType: 'container'
  displayName: Publish artifacts
- task: CopyFiles@2
  inputs:
    contents: '**/*.apk'
    targetFolder: '$(build.artifactStagingDirectory)'
- task: PublishBuildArtifacts@1
# App Center distribute
# Distribute app builds to testers and users via Visual Studio App Center

- bash: |
      $ANDROID_HOME/tools/bin/sdkmanager --list
  displayName: 'list already installed Android packages'
- bash: |
      echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install 'system-images;android-27;google_apis;x86'
  displayName: 'install Android image'
- script: |
      $ANDROID_HOME/emulator/emulator -list-avds
      echo '---'
      echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n test_android_emulator -k 'system-images;android-27;google_apis;x86' --force
      echo '---'
      $ANDROID_HOME/emulator/emulator -list-avds
  displayName: 'create AVD'
- script: |
      $ANDROID_HOME/platform-tools/adb devices
      echo '---'
      nohup $ANDROID_HOME/emulator/emulator -avd test_android_emulator -no-snapshot > /dev/null 2>&1 & $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done; input keyevent 82'
      echo '---'
      $ANDROID_HOME/platform-tools/adb devices
  displayName: 'start Android emulator'
- task: AppCenterDistribute@3
  inputs:
    serverEndpoint: 'Appcenter'
    appSlug: 'https://appcenter.ms/users/tomasz.sipek-gmail.com/apps/test6'
    appFile: 
    buildVersion: '1'
    releaseNotesOption: 'input'
    releaseNotesInput: 'test'
    destinationType: 'groups'
